@page "/admin13"

@inject ApplicationDbContext db
@inject NavigationManager Navigation

<PageTitle>Index</PageTitle>

<center><h1><span class="oi oi-magnifying-glass" aria-hidden="true"></span> Choose a date range</h1>

		<p>
			Select Entries From: <input type="date" @bind="dateselectedfrom" /> To: <input type="date" @bind="dateselectedto" />
			<button class="btn btn-primary" @onclick="SelectEntries" style="color: rgb(5, 39, 103);"><span style="color:white">Select</span></button>
			@*<button class="btn btn-danger" @onclick="DeleteAll">DeleteAll</button>*@
		</p>
		<p><input type="text" @bind="pass" /></p>

		<hr />
		@if (@avgSentiment != "")
				{
  <strong><p>Sentiment average for selected period = @avgSentiment %</p></strong>
		}
		<table class="table table-striped" style="table-layout: fixed;word-wrap: break-word;">
			<thead>
	@*			<tr></tr>
				<tr></tr>
				<tr></tr>*@
			</thead>
			<tbody>
				@foreach (var item in getSentimentForDate)
				{
	<tr>

	 <td style = "width:60%;">
						@item.Sentiment
	 </td>
	 <td>
						@item.SentimentScore %
	 </td>
	 	 <td>
						@item.UserID
	 </td>
	 <td> <button class="btn" @onclick="@(()=> Remove(item.Id))"><i class="fa fa-close" style="color:red;zoom:1;"></i></button></td>
	</tr>
				}
			</tbody>
		</table>
		</center>

@code {

	string pass = "";
	DateTime date = DateTime.Now;
	static string shortdate = DateTime.Now.ToShortDateString();

	List<SentimentAI> getSentimentForDate = new List<SentimentAI>();
	DateTime dateselectedfrom = DateTime.Parse(shortdate);
	DateTime dateselectedto = DateTime.Now;

	public string avgSentiment = "";


	protected override async Task OnInitializedAsync()
	{		

	}


	public void SelectEntries()
	{

		getSentimentForDate = db.SentimentAIs.Where(x => x.Date >= dateselectedfrom && x.Date <= dateselectedto)
			.OrderBy(x => x.Date)
			.Take(100)
			.ToList();

		var sum = getSentimentForDate.Where(x => x.SentimentScore > 0).Select(x => x.SentimentScore).Sum();
		var count = getSentimentForDate.Where(x => x.SentimentScore > 0).Select(x => x.SentimentScore).Count();
		avgSentiment = Convert.ToString(sum / count);

		StateHasChanged();

	}

	public void Remove(Guid id)
	{
		if (pass == "shrike111") { 
		var item = db.SentimentAIs.Where(x => x.Id == id).SingleOrDefault();

		db.SentimentAIs.Remove(item);
		db.SaveChanges();
		StateHasChanged();
		}

	}

}
